webpackJsonp([0x7266e09131d8ec00],{"./node_modules/json-loader/index.js!./.cache/json/blog-2017-08-20-releasing-node-packages.json":function(e,t){e.exports={data:{site:{siteMetadata:{title:"Software Development Notes",author:"Ryan Lanciaux"}},markdownRemark:{id:"/Users/ryan/projects/blog/ryanlanciaux.github.com/src/pages/2017-08-20-releasing-node-packages/index.md absPath of file >>> MarkdownRemark",html:'<p>When releasing a new version of an open source project, it’s important to make sure a series of things happen in the same order for every release. I’ve attempted to make a “script” I follow for releasing <a href="http://griddlegriddle.github.io/Griddle">Griddle</a> to npm that helps promote consistent releases and (as much as possible) illuminates any issues before they impact others using the package.</p>\n<ol>\n<li>Run all tests and local ”<a href="http://softwaretestingfundamentals.com/smoke-testing/">smoke-tests</a>”</li>\n<li>Update the version in package.json</li>\n<li>Update CHANGELOG.md with any high-level changes</li>\n<li>Push package.json and CHANGELOG.md to the master branch of the project</li>\n<li>Release to npm as a tagged, pre-release version. Generally, this would be done by running <code>npm publish --tag next</code> (or whatever you want to call your pre-release version). This lets you test your project as a npm package without making it the version that is installed when running <code>npm install</code> or <code>yarn add</code>. In Griddle, we generally run this through <code>npm run ship-it</code> which essentially runs our build script and then pushes the output as a pre-release package. <a href="https://blog.greenkeeper.io/one-simple-trick-for-javascript-package-maintainers-to-avoid-breaking-their-user-s-software-and-to-6edf06dc5617">See this blog post</a> for more thoughts on this pre-release strategy.</li>\n<li>From here, I generally install the new, pre-release version on the <code>griddle-docs</code> project as well as some of my own projects that use the library. I do this to help ensure that there are no known regressions before making this version the <code>@latest</code> tag in npm.</li>\n<li>If all is successful, it’s time to officially release this version — <code>npm dist-tag griddle-react@1.8.0 latest</code></li>\n</ol>\n<p>While following a script doesn’t ensure there will be zero issues, it does help avoid common mistakes or makes things very clear where there is a problem in the process.</p>',frontmatter:{title:"Releasing node packages",date:"August 20, 2017"}}},pathContext:{path:"/blog/2017/08/20/releasing-node-packages/"}}}});
//# sourceMappingURL=path---blog-2017-08-20-releasing-node-packages-5b99a7d56df989353df6.js.map