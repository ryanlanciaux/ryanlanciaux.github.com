{"data":{"site":{"siteMetadata":{"title":"Ryan Lanciaux","author":"Ryan Lanciaux"}},"markdownRemark":{"id":"a827371d-1ee7-5a2c-908e-7f509df087a1","excerpt":"My beloved MacBook Pro is currently with Apple Care for some repairs. Unfortunately, I have a lot to do this week and no other computers that are really set up‚Ä¶","html":"<p>My beloved MacBook Pro is currently with Apple Care for some repairs. Unfortunately, I have a lot to do this week and no other computers that are really set up for development. While my computer is in the shop, I‚Äôm going to do my normal development work on the computer I ususally use for creating music through <a href=\"https://docs.microsoft.com/en-us/windows/wsl/wsl2-index\">Windows Subsystem for Linux v2</a>.</p>\n<p><a href=\"https://docs.microsoft.com/en-us/windows/wsl/wsl2-about\">Windows Subsystem for Linux has been out for a bit of time now but a release of 2.0 is around the corner</a>. There are a number of reported improvements but the one I‚Äôm most excited about is enhanced speed / performance. While I have yet to really write much code on this computer, WSL 2 seems pretty fast with the repositories I‚Äôve prepared for the week ahead. </p>\n<h2>Install WSL 2</h2>\n<p>There are a number of guides on installing WSL 2 but the ones that I referenced were the official <a href=\"https://docs.microsoft.com/en-us/windows/wsl/wsl2-install\">Microsoft Documentation</a> and <a href=\"https://www.thomasmaurer.ch/2019/06/install-wsl-2-on-windows-10/\">this post by Thomas Maurer</a>.</p>\n<p>These guides are pretty complete but I did get tripped up a little ensuring that all my system updates were complete before attempting to install WSL. Once joining the Windows Insider Program, ensure that System Update has completed and your Windows build version is 18917 (or higher). You can determine your Windows version by running ‚Äúwinver‚Äù.</p>\n<p>Once WSL 2 is installed, go to the Microsoft Store and Download Ubuntu and set the WSL version <code class=\"language-text\">wsl --set-version Ubuntu 2</code> from Powershell.</p>\n<p>Hopefully, you can run Ubuntu from the start menu but at this point in the installation process I started receiving an error:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">The requested operation could not be completed due to a virtual disk system limitation. Virtual hard disk files must be uncompressed and unencrypted and must not be sparse. </code></pre></div>\n<p>It turns out my Ubuntu directory was being compressed in Windows. Once changing compression settings for this folder, I could run my Ubuntu distro. <a href=\"https://github.com/microsoft/WSL/issues/4103\">See this discussion on GitHub for more on that</a>. </p>\n<h2>Install nvm</h2>\n<p>nvm is a node version manager. I use it to run different projects with different versions of node. nvm can be installed with the <a href=\"https://github.com/nvm-sh/nvm#install--update-script\">Setup directions from the documentation</a> </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash</code></pre></div>\n<h2>Install node</h2>\n<p>Once nvm is installed, node can be installed by typing <code class=\"language-text\">nvm install v#</code> - I installed node v11 as the default. You can specify a default by typing <code class=\"language-text\">nvm alias default v11</code></p>\n<h2>Install yarn</h2>\n<p>I generally use yarn, rather than the npm cli for node dependency management. To install yarn, follow the <a href=\"https://yarnpkg.com/en/docs/install#debian-stable\">directions from the project‚Äôs setup guide</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho &quot;deb https://dl.yarnpkg.com/debian/ stable main&quot; | sudo tee /etc/apt/sources.list.d/yarn.list</code></pre></div>\n<p>Yarn should be installed on your Distro now right? For me, not so much. Once I navigated to a project and ran <code class=\"language-text\">yarn install</code>, I was greeted with a nice error message:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">00h00m00s 0/0: : ERROR: There are no scenarios; must have at least one.</code></pre></div>\n<p>Upon some research, I stumbled upon <a href=\"https://github.com/yarnpkg/yarn/issues/2821#issuecomment-284181365\">a thread on GitHub where others were encountering this same issue</a>. </p>\n<p>It turns out that there‚Äôs another <code class=\"language-text\">yarn</code> that‚Äôs installed through <code class=\"language-text\">cmdtest</code>. Removing cmdtest (<code class=\"language-text\">sudo apt remove cmdtest</code>) followed by the <a href=\"https://yarnpkg.com/en/docs/install#debian-stable\">standard yarn install instructions</a> should work. It should be noted that after bumping into this error and resolution I noticed that the install instructions note that Ubuntu 17.04 and above could encounter this scenario and I didn‚Äôt catch it ü§¶‚Äç‚ôÇÔ∏è. </p>\n<h2>VS Code</h2>\n<p>If you don‚Äôt have <a href=\"https://code.visualstudio.com/\">Visual Studio Code</a>, you should install it and the <a href=\"https://code.visualstudio.com/docs/remote/remote-overview\"><code class=\"language-text\">Remote - WSL Plugin</code></a></p>\n<p>This plugin lets you type <code class=\"language-text\">code .</code> in your Ubuntu terminal and open up the project in Code in Windows (although, <a href=\"http://ryanlanciaux.com/blog/2017/10/26/neovim-for-software-development/\">you could always use vim</a>) </p>\n<h2>Install zsh and set as your default shell (optional)</h2>\n<p>I use zsh as my default shell along with oh-my-zsh. Install instructions can be found here: </p>\n<ul>\n<li><a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Installing-ZSH#ubuntu-debian--derivatives-windows-10-wsl--native-linux-kernel-with-windows-10-build-1903\">zsh install instructions</a></li>\n<li><a href=\"https://github.com/robbyrussell/oh-my-zsh\">oh-my-zsh install instructions</a></li>\n</ul>\n<h2>Windows Terminal</h2>\n<p><a href=\"https://www.microsoft.com/en-us/p/windows-terminal-preview/9n0dx20hk701?activetab=pivot:overviewtab\">Windows terminal</a> is a new terminal client for running multiple command lines. I‚Äôm mostly using it for WSL but it‚Äôs nice that you can launch a Powershell / cmd tab as well. <a href=\"https://www.microsoft.com/en-us/p/windows-terminal-preview/9n0dx20hk701?activetab=pivot:overviewtab\">Windows Terminal is available in the Microsoft Store</a>. </p>\n<p>By default, Powershell was my default command line application. To change this to WSL open the settings and change the <code class=\"language-text\">defaultProfile</code> property to match the guid property for your WSL distro. For example: </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  ..\n  &quot;defaultProfile&quot;: &quot;{2c4de342-38b7-51cf-b940-2309a097f518}&quot;,\n  &quot;profiles&quot;: [\n    ...,\n    {\n      &quot;acrylicOpacity&quot;: 0.5,\n      &quot;closeOnExit&quot;: true,\n      &quot;colorScheme&quot;: &quot;Solarized Dark&quot;,\n      &quot;commandline&quot;: &quot;ubuntu&quot;,\n      &quot;cursorColor&quot;: &quot;#FFFFFF&quot;,\n      &quot;cursorShape&quot;: &quot;bar&quot;,\n      &quot;fontFace&quot;: &quot;Consolas&quot;,\n      &quot;fontSize&quot;: 10,\n      &quot;guid&quot;: &quot;{2c4de342-38b7-51cf-b940-2309a097f518}&quot;,\n      &quot;historySize&quot;: 9001,\n      &quot;icon&quot;: &quot;ms-appx:///ProfileIcons/{9acb9455-ca41-5af7-950f-6bca1bc9722f}.png&quot;,\n      &quot;name&quot;: &quot;Ubuntu&quot;,\n      &quot;padding&quot;: &quot;0, 0, 0, 0&quot;,\n      &quot;snapOnInput&quot;: true,\n      &quot;startingDirectory&quot;: &quot;~/&quot;,\n      &quot;useAcrylic&quot;: false\n    },  \n}</code></pre></div>\n<p>The default profile matches the guid for my Ubuntu profile. One other thing of note, I changed my <code class=\"language-text\">commandline</code> property to <code class=\"language-text\">ubuntu</code> rather than the default to load in my home directory (there is quite possibly a better way to do that).</p>\n<h2>Reference web applications by IP Address instead of localhost</h2>\n<p>The WSL documentation mentions this but thought it would be good to call out here as well. You currently need to access your applications by IP address rather than localhost. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ip addr | grep eth0</code></pre></div>\n<p>Should get the IP address that you can use to reference your application.</p>\n<h2>Wrapping Up</h2>\n<p>That‚Äôs it for now - while I am looking forward to having my standard development machine back, I‚Äôm grateful that WSL 3 exists. </p>","frontmatter":{"title":"Windows Subsystem for Linux for React development","date":"Invalid date","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2019/09/15/windows-subsystem-for-linux-2/","previous":{"fields":{"slug":"/blog/2017/10/26/amazon-echo-costume/"},"frontmatter":{"title":"Amazon Echo Costume"}},"next":{"fields":{"slug":"/blog/2017/10/26/neovim-for-software-development/"},"frontmatter":{"title":"NeoVim for Software Development"}}}}