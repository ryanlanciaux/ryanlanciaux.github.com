{"data":{"site":{"siteMetadata":{"title":"Ryan Lanciaux","author":"Ryan Lanciaux"}},"markdownRemark":{"id":"189138fa-6e49-5e09-968d-3a7611becb5b","excerpt":"Nullish Coalescing is a language feature of JavaScript that was recently promoted to Stage 4 by TC39, the group that maintains the definition of JavaScript…","html":"<p>Nullish Coalescing is a language feature of JavaScript that was recently promoted to Stage 4 by TC39, the group that maintains the definition of JavaScript.</p>\n<p>With any language feature, it’s good to understand how it helps us. Nullish Coalescing helps us eliminate a certain class of code that primarily consists of checking if something is null or undefined.</p>\n<p>Lets take an example where we’re we want to display a Star Wars character’s first and last name. When the last name is undefined, we should show “Not Specified”, but if the last name is \"\" we should treat it like the character doesn’t have a last name.</p>\n<p>For instance, if we had the following character definitions:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const hanSolo = {\n  first: &#39;Han&#39;,\n  last: &quot;Solo&quot;\n};\n\nconst chewbacca = {\n  first: &quot;Chewbacca&quot;,\n  last: &quot;&quot;\n}\n\nconst rey = {\n  first: &quot;Rey&quot;,\n  lastName: undefined\n}</code></pre></div>\n<p>Lets assume that we had a function, <code class=\"language-text\">displayName</code> that was responsible for obtaining the character’s full name for display. This function should return <code class=\"language-text\">first</code> + <code class=\"language-text\">last</code> or <code class=\"language-text\">first</code> + <code class=\"language-text\">Not specified</code> if the last name is not present. Additionally, for the sake of example, lets assume that a <code class=\"language-text\">lastName</code> of \"\" means the character doesn’t have a last name.</p>\n<p>We may be tempted to reach for a logical OR operator like follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function displayName(character) {\n  const lastName = character.last || &quot;Not specified&quot;\n\n  log(character.first, lastName)\n}</code></pre></div>\n<p>This would work well for <code class=\"language-text\">hanSolo</code> and <code class=\"language-text\">rey</code> but would fall short for Chewbacca, since we’re specifying that his last name is \"\" (meaning he has no last name for our simple example).</p>\n<p>Without the null coalescing operator, we’d generally have to check for lastName being null or undefined since an empty string is evaluated as falsy. Since this last name is evaluated as falsy, the logical OR operator fails for our use case.</p>\n<p>If we change our function to the following, everything works as expected, however it’s a lot more code.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function displayName(character) {\n const lastName = character.last === null || character.last === undefined\n  ? &#39;Not Specified&#39;\n  : character.last;\n\n  log(character.first, lastName)\n}</code></pre></div>\n<p>Using the nullish coalescing operator is a lot more focused:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function displayName(character) {\n  const lastName = character.last ?? &quot;Not specified&quot;\n\n  log(character.first, lastName)\n}</code></pre></div>\n<p>This is very similar to the function using the logical OR ”||” except we’re using two question marks instead ”??”</p>\n<p>Please <a href=\"https://twitter.com/ryanlanciaux\">find me on Twitter at @ryanlanciaux</a></p>","frontmatter":{"title":"Nullish Coalescing in JavaScript","date":"January 22, 2020","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2020/01/22/nullish-coalescing-in-javascript/","previous":{"fields":{"slug":"/blog/2020/01/14/snowpack-with-react/"},"frontmatter":{"title":"Snowpack with React"}},"next":null}}