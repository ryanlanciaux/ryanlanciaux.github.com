webpackJsonp([0xacce29d91b2c280],{"./node_modules/json-loader/index.js!./.cache/json/blog-2014-10-28-react-plus-jest-testing-on-windows-ii.json":function(e,t){e.exports={data:{site:{siteMetadata:{title:"Random Development",author:"Ryan Lanciaux"}},markdownRemark:{id:"/home/ryan/projects/temp/ryanlanciaux.github.io/src/pages/2014-10-28-react-plus-jest-testing-on-windows-ii/index.md absPath of file >>> MarkdownRemark",html:'<p>Last time I wrote about running <a href="http://ryanlanciaux.github.io/blog/2014/08/02/using-jest-for-testing-react-components-on-windows/">Jest on Windows</a> there was one thing I left out. The test output would show if the tests pass or fail but no data is displayed regarding why they fail. This is due to an <a href="https://github.com/joyent/node/issues/3584">issue with stdio in Windows</a>, however, there appears to be <a href="https://github.com/facebook/jest/pull/111">a fix in the works</a>.</p>\n<p>Until that fix makes its way into a released version of Jest, you can simply copy bin/jest.js from <a href="https://github.com/malonecj/jest">Connor Malone’s branch on GitHub</a> as a workaround. If using the file outright doesn’t sound desirable, any line that has <code>process.exit(0)</code> can be wrapped in a <code>process.on(\'exit\')</code> block:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>process.on(\'exit\', function(){\n  process.exit(0);\n});</code></pre>\n      </div>\n<p>See the diff of the modified code <a href="https://github.com/malonecj/jest/commit/3e66e456f4c612126053483508d89f4751966f45">here</a>.</p>',frontmatter:{title:"React + Jest Testing on Windows II",date:"October 28, 2014"}}},pathContext:{path:"/blog/2014/10/28/react-plus-jest-testing-on-windows-ii/"}}}});
//# sourceMappingURL=path---blog-2014-10-28-react-plus-jest-testing-on-windows-ii-0a0a26664c1d959fdcac.js.map