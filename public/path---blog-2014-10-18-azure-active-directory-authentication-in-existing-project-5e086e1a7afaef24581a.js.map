{"version":3,"sources":["webpack:///path---blog-2014-10-18-azure-active-directory-authentication-in-existing-project-5e086e1a7afaef24581a.js","webpack:///./.cache/json/blog-2014-10-18-azure-active-directory-authentication-in-existing-project.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/blog-2014-10-18-azure-active-directory-authentication-in-existing-project.json","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","path"],"mappings":"AAAAA,cAAc,qBAERC,mIACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,MACAC,cACAC,MAAA,sBACAC,OAAA,iBAGAC,gBACAC,GAAA,6KACAC,KAAA,irFACAC,aACAL,MAAA,4DACAM,KAAA,sBAIAC,aACAC,KAAA","file":"path---blog-2014-10-18-azure-active-directory-authentication-in-existing-project-5e086e1a7afaef24581a.js","sourcesContent":["webpackJsonp([9045495470691301000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/blog-2014-10-18-azure-active-directory-authentication-in-existing-project.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"site\": {\n\t\t\t\t\"siteMetadata\": {\n\t\t\t\t\t\"title\": \"Gatsby Starter Blog\",\n\t\t\t\t\t\"author\": \"Kyle Mathews\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"id\": \"/home/ryan/projects/temp/ryanlanciaux.github.io/src/pages/2014-10-18-azure-active-directory-authentication-in-existing-project/index.md absPath of file >>> MarkdownRemark\",\n\t\t\t\t\"html\": \"<p>Recently, I needed to add Azure Active directory authentication to an existing web project. There was an automated tool for Visual Studio 2012 but there does not seem to be a similar component for 2013. A lot of the advice I found suggested creating a new project and importing a bit of the code / config from the other application — that’s what I did here. What follows is not a how-to but rather a log of the steps I took to use AAD authentication (mostly for <a href=\\\"http://xkcd.com/1421/\\\">future reference</a>).</p>\\n<h3>References</h3>\\n<p>First off there are some references that were missing in the project. I needed to add </p>\\n<ol>\\n<li><strong>System.IdentityModel</strong> </li>\\n<li><strong>System.IdentityModelServices</strong> </li>\\n</ol>\\n<p>In addition to the system references, the <strong>Microsoft Token Validation Extension</strong> should be installed from NuGet.</p>\\n<h3>Code</h3>\\n<ol>\\n<li>Copy over <strong>DatabaseIssuerNameRegistry.cs</strong> (I added this under utils)</li>\\n<li><strong>IssuingAuthorityKey.cs</strong> (model\\\\tenant)</li>\\n<li><strong>Tenant.cs</strong></li>\\n<li><strong>TenantDbContext.cs</strong></li>\\n<li><strong>IdentityConfig.cs</strong> (This needs to be in the app_start directory)</li>\\n</ol>\\n<h3>Azure</h3>\\n<p>On your Azure active directory settings you will need to add an application. Click on Applications -> Add -> URL: Localhost:Port (or real URL) and give it the ID of the site you are developing. </p>\\n<h3>Config</h3>\\n<p>Copy over the following config sections replacing any reference to ID / URL with the settings that were applied to the Application added in the Active Directory settings. </p>\\n<ol>\\n<li><strong>configuration\\\\configSections\\\\system.identityModel</strong></li>\\n<li><strong>configuration\\\\configSections\\\\system.identityModel.services</strong></li>\\n<li><strong>configuration\\\\location</strong></li>\\n<li><strong>configuration.system.identityModel</strong> - The DatabaseIssuerNameRegistry should have the fully qualified name of the DatabaseIssuer class.</li>\\n<li><strong>configuration\\\\system.web\\\\authentication</strong></li>\\n<li><strong>configuration\\\\system.web\\\\authorization</strong></li>\\n<li><strong>configuration.system.identityModel.services</strong></li>\\n<li>\\n<p><strong>configuration\\\\appSettings</strong></p>\\n<ol>\\n<li><strong>ida:FederationMetadataLocation</strong> - Use your active directory path</li>\\n<li><strong>ida:Realm</strong></li>\\n<li><strong>ida:AudienceUri</strong></li>\\n</ol>\\n</li>\\n<li><strong>configuration\\\\system.webServer</strong></li>\\n</ol>\\n<p>Again this is not an exhaustive guide but rather a checklist for making sure the correct code/configuration is included in the existing project. </p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Azure Active Directory authentication in existing project\",\n\t\t\t\t\t\"date\": \"October 18, 2014\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"path\": \"/blog/2014/10/18/azure-active-directory-authentication-in-existing-project/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-2014-10-18-azure-active-directory-authentication-in-existing-project-5e086e1a7afaef24581a.js","module.exports = {\n\t\"data\": {\n\t\t\"site\": {\n\t\t\t\"siteMetadata\": {\n\t\t\t\t\"title\": \"Gatsby Starter Blog\",\n\t\t\t\t\"author\": \"Kyle Mathews\"\n\t\t\t}\n\t\t},\n\t\t\"markdownRemark\": {\n\t\t\t\"id\": \"/home/ryan/projects/temp/ryanlanciaux.github.io/src/pages/2014-10-18-azure-active-directory-authentication-in-existing-project/index.md absPath of file >>> MarkdownRemark\",\n\t\t\t\"html\": \"<p>Recently, I needed to add Azure Active directory authentication to an existing web project. There was an automated tool for Visual Studio 2012 but there does not seem to be a similar component for 2013. A lot of the advice I found suggested creating a new project and importing a bit of the code / config from the other application — that’s what I did here. What follows is not a how-to but rather a log of the steps I took to use AAD authentication (mostly for <a href=\\\"http://xkcd.com/1421/\\\">future reference</a>).</p>\\n<h3>References</h3>\\n<p>First off there are some references that were missing in the project. I needed to add </p>\\n<ol>\\n<li><strong>System.IdentityModel</strong> </li>\\n<li><strong>System.IdentityModelServices</strong> </li>\\n</ol>\\n<p>In addition to the system references, the <strong>Microsoft Token Validation Extension</strong> should be installed from NuGet.</p>\\n<h3>Code</h3>\\n<ol>\\n<li>Copy over <strong>DatabaseIssuerNameRegistry.cs</strong> (I added this under utils)</li>\\n<li><strong>IssuingAuthorityKey.cs</strong> (model\\\\tenant)</li>\\n<li><strong>Tenant.cs</strong></li>\\n<li><strong>TenantDbContext.cs</strong></li>\\n<li><strong>IdentityConfig.cs</strong> (This needs to be in the app_start directory)</li>\\n</ol>\\n<h3>Azure</h3>\\n<p>On your Azure active directory settings you will need to add an application. Click on Applications -> Add -> URL: Localhost:Port (or real URL) and give it the ID of the site you are developing. </p>\\n<h3>Config</h3>\\n<p>Copy over the following config sections replacing any reference to ID / URL with the settings that were applied to the Application added in the Active Directory settings. </p>\\n<ol>\\n<li><strong>configuration\\\\configSections\\\\system.identityModel</strong></li>\\n<li><strong>configuration\\\\configSections\\\\system.identityModel.services</strong></li>\\n<li><strong>configuration\\\\location</strong></li>\\n<li><strong>configuration.system.identityModel</strong> - The DatabaseIssuerNameRegistry should have the fully qualified name of the DatabaseIssuer class.</li>\\n<li><strong>configuration\\\\system.web\\\\authentication</strong></li>\\n<li><strong>configuration\\\\system.web\\\\authorization</strong></li>\\n<li><strong>configuration.system.identityModel.services</strong></li>\\n<li>\\n<p><strong>configuration\\\\appSettings</strong></p>\\n<ol>\\n<li><strong>ida:FederationMetadataLocation</strong> - Use your active directory path</li>\\n<li><strong>ida:Realm</strong></li>\\n<li><strong>ida:AudienceUri</strong></li>\\n</ol>\\n</li>\\n<li><strong>configuration\\\\system.webServer</strong></li>\\n</ol>\\n<p>Again this is not an exhaustive guide but rather a checklist for making sure the correct code/configuration is included in the existing project. </p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Azure Active Directory authentication in existing project\",\n\t\t\t\t\"date\": \"October 18, 2014\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"path\": \"/blog/2014/10/18/azure-active-directory-authentication-in-existing-project/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-2014-10-18-azure-active-directory-authentication-in-existing-project.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/blog-2014-10-18-azure-active-directory-authentication-in-existing-project.json\n// module chunks = 9045495470691301000"],"sourceRoot":""}